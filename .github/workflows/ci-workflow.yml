name: "CI Tests"

on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:12.3
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - uses: actions/setup-elixir@v1
        with:
          otp-version: "23.0.2"
          elixir-version: "1.10.4"

      - name: Install Dependencies
        run: mix deps.get

      - name: Install node module
        run: cd apps/ex_marketer_web/assets && npm install

      - name: Compile assets
        run: cd apps/ex_marketer_web/assets && ./node_modules/.bin/webpack --mode development

      - name: Create database
        run: mix ecto.create
        env:
          MIX_ENV: test
          DB_HOST: localhost

      - name: Migrate database
        run: mix ecto.migrate
        env:
          MIX_ENV: test
          DB_HOST: localhost

      - name: Run lint
        run: mix lint
        env:
          MIX_ENV: test
          DB_HOST: localhost

      - name: Run Tests
        run: mix test
        env:
          MIX_ENV: test
          DB_HOST: localhost

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: wallaby_screenshots
          path: apps/ex_marketer_web/tmp/wallaby_screenshots/
